{"version":3,"file":"static/js/308.ee8fee41.chunk.js","mappings":"iTAEMA,EAAU,mCAEhBC,EAAAA,EAAAA,SAAAA,QAAyB,gCAElB,IAAMC,EAAkB,mCAAG,oGACTD,EAAAA,EAAAA,IAAA,qCAAwCD,IAD/B,cAC1BG,EAD0B,yBAEzBA,EAASC,MAFgB,2CAAH,qDAKlBC,EAAgB,mCAAE,WAAMC,GAAN,uFACNL,EAAAA,EAAAA,IAAA,+BACGD,EADH,iCACmCM,EADnC,gCADM,cACvBH,EADuB,yBAItBA,EAASC,MAJa,2CAAF,sDAOhBG,EAAc,mCAAG,WAAMC,GAAN,uFACLP,EAAAA,EAAAA,IAAA,gBACZO,EADY,oBACER,EADF,oBADK,cACtBG,EADsB,yBAIrBA,EAASC,MAJY,2CAAH,sDAOdK,EAAS,mCAAG,WAAMD,GAAN,uFACAP,EAAAA,EAAAA,IAAA,gBACZO,EADY,4BACUR,EADV,oBADA,cACjBG,EADiB,yBAIhBA,EAASC,MAJO,2CAAH,sDAOTM,EAAY,mCAAG,WAAMF,GAAN,uFACHP,EAAAA,EAAAA,IAAA,gBACZO,EADY,4BACUR,EADV,2BADG,cACpBG,EADoB,yBAInBA,EAASC,MAJU,2CAAH,qD,+OC9BZO,EAAaC,EAAAA,EAAAA,IAAH,kIAOVC,EAAgBD,EAAAA,EAAAA,IAAH,iEAIbE,EAAYF,EAAAA,EAAAA,IAAH,0CAITG,EAAWH,EAAAA,EAAAA,GAAH,gIAcRI,GANWJ,EAAAA,EAAAA,GAAH,kFAMGA,EAAAA,EAAAA,IAAH,0CAGRK,EAAcL,EAAAA,EAAAA,IAAH,0CAGXM,EAAYN,EAAAA,EAAAA,OAAH,+pB,4FCStB,UA1CgB,WACd,OAA8BO,EAAAA,EAAAA,UAAS,CAAC,GAAxC,eAAOC,EAAP,KAAgBC,EAAhB,KAEQb,GAAOc,EAAAA,EAAAA,MAAPd,GAYR,OAVAe,EAAAA,EAAAA,YAAU,WACR,KACEb,EAAAA,EAAAA,IAAaF,GAAIgB,MAAK,SAAApB,GACpBiB,EAAWjB,EAAKqB,QACjB,GAGF,CAFC,MAAOC,GACPC,QAAQC,IAAIF,EACb,CACF,GAAE,CAAClB,IAEgC,IAAhCqB,OAAOC,KAAKV,GAASW,QAChB,uBAAG,iBAIV,SAAC,KAAD,CAAaC,MAAO,CAAEC,QAAS,QAA/B,UACE,wBACGb,EAAQW,OAAS,EACdX,EAAQc,KAAI,SAAAC,GAAO,OACjB,2BACE,4BACE,uBAAIA,EAAQC,UAEZ,uBACG,IAAIC,KAAKF,EAAQG,YAAYC,2BAIlC,yBAAMJ,EAAQK,YATPL,EAAQ3B,GADA,IAanB,qBAIX,C","sources":["apiMovie/ApiMovie.jsx","pages/movies/moviesDetails.styled.js","pages/movies/reviews/reviews.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = 'c6d20ac7fe7f3a55ab35208eb3f1e312';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport const fetchTrendingFilms = async () => {\n  const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n  return response.data;\n};\n\nexport const fetchFilmsByName= async query => {\n  const response = await axios.get(\n    `search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n  );\n  return response.data;\n};\n\nexport const fetchFilmsById = async id => {\n  const response = await axios.get(\n    `movie/${id}?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const fetchCast = async id => {\n  const response = await axios.get(\n    `movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const fetchReviews = async id => {\n  const response = await axios.get(\n    `movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return response.data;\n};","import styled from '@emotion/styled';\n\nexport const DetailsDiv = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin: 0 auto;\n  padding: 50px;\n`;\nexport const TextContainer = styled.div`\n  font-size: 20px;\n  font-weight: 400;\n`;\nexport const AddIndorm = styled.div`\n  padding: 50px;\n`;\n\nexport const CastList = styled.ul`\n  display: flex;\n  flex-direction: row;\n  gap: 20px;\n  flex-wrap: wrap;\n  justify-content: center;\n`;\n\nexport const CastItem = styled.li`\n  flex-direction: row;\n  gap: 20px;\n  flex-wrap: wrap;\n`;\n\nexport const CastName = styled.div`\n  width: 120px;\n`;\nexport const ReviewsList = styled.div`\n  padding: 50px;\n`;\nexport const GoBckkBtn = styled.button`\n  width: 115px;\n  height: 40px;\n  border-radius: 25px;\n  color: #6b18e1;\n  background-color: #e6df16ab;\n  margin-top: 25px;\n  margin-bottom: 35px;\n  margin-left: 35px;\n  font-size: 18px;\n  font-weight: 600;\n  cursor: pointer;\n  border: none;\n  outline: none;\n  box-shadow: rgba(50, 50, 93, 0.25) 0px 50px 100px -20px,\n    rgba(0, 0, 0, 0.3) 0px 30px 60px -30px,\n    rgba(10, 37, 64, 0.35) 0px -2px 6px 0px inset,\n    rgba(50, 50, 93, 0.25) 0px 50px 100px -20px,\n    rgba(0, 0, 0, 0.3) 0px 30px 60px -30px;\n  transition: all 500ms ease-out;\n  &:hover {\n    transform: scale(1.08);\n    text-shadow: 1px 1px 2px whitesmoke;\n  }\n`;\n","import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchReviews } from '../../../apiMovie/ApiMovie';\nimport { ReviewsList } from '../moviesDetails.styled';\nconst Reviews = () => {\n  const [reviews, setReviews] = useState({});\n\n  const { id } = useParams();\n\n  useEffect(() => {\n    try {\n      fetchReviews(id).then(data => {\n        setReviews(data.results);\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  }, [id]);\n\n  if (Object.keys(reviews).length === 0) {\n    return <p>No reviews!</p>;\n  }\n\n  return (\n    <ReviewsList style={{ display: 'flex' }}>\n      <ul>\n        {reviews.length > 0\n          ? reviews.map(comment => (\n              <li key={comment.id}>\n                <div>\n                  <p>{comment.author}</p>\n\n                  <p>\n                    {new Date(comment.updated_at).toLocaleDateString()}\n                  </p>\n                </div>\n\n                <div>{comment.content}</div>\n              </li>\n            ))\n          : \"No reviews yet!\"}\n      </ul>\n    </ReviewsList>\n  );\n};\n\nexport default Reviews;\n"],"names":["API_KEY","axios","fetchTrendingFilms","response","data","fetchFilmsByName","query","fetchFilmsById","id","fetchCast","fetchReviews","DetailsDiv","styled","TextContainer","AddIndorm","CastList","CastName","ReviewsList","GoBckkBtn","useState","reviews","setReviews","useParams","useEffect","then","results","error","console","log","Object","keys","length","style","display","map","comment","author","Date","updated_at","toLocaleDateString","content"],"sourceRoot":""}