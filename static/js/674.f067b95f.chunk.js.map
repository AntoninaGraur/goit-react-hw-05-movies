{"version":3,"file":"static/js/674.f067b95f.chunk.js","mappings":"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","sources":["apiMovie/ApiMovie.jsx","components/container/container.jsx","components/moviesMenu/moviesItem/moviesItem.jsx","components/moviesMenu/moviesList/moviesList.jsx","pages/home/home.styled.js","components/searchForm/searchForm.styled.js","components/searchForm/searchForm.jsx","pages/movies/movies.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = 'c6d20ac7fe7f3a55ab35208eb3f1e312';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport const fetchTrendingFilms = async () => {\n  const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n  return response.data;\n};\n\nexport const fetchFilmsByName= async query => {\n  const response = await axios.get(\n    `search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n  );\n  return response.data;\n};\n\nexport const fetchFilmsById = async id => {\n  const response = await axios.get(\n    `movie/${id}?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const fetchCast = async id => {\n  const response = await axios.get(\n    `movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const fetchReviews = async id => {\n  const response = await axios.get(\n    `movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return response.data;\n};","import React from 'react';\n// import PropTypes from 'prop-types';\nimport { ContainerHome } from 'pages/home/home.styled';\n\nconst Container = ({ children }) => {\n  return <ContainerHome>{children}</ContainerHome>;\n};\n\n// Container.propTypes = {\n//   children: PropTypes.oneOfType([\n//     PropTypes.arrayOf(PropTypes.node),\n//     PropTypes.node,\n//   ]).isRequired,\n// };\n\nexport default Container;","import React from 'react';\n// import PropTypes from 'prop-types';\n\nimport { FilmTitle } from 'pages/home/home.styled';\nimport { useLocation, Link} from 'react-router-dom';\n\nfunction MovieItem({ id, title, poster_path }) {\n  const location = useLocation();\n\n  return (\n    <li key={id}>\n      <Link to={`/movies/${id}`} state={{ from: location }} >\n        <img\n          src={\n            `https://image.tmdb.org/t/p/w400${poster_path}`}\n          alt={title}\n          width=\"250\"\n          height=\"350\"\n        />\n        <FilmTitle>{title}</FilmTitle>\n      </Link>\n    </li>\n  );\n}\n\n// MovieItem.propTypes = {\n//   id: PropTypes.number.isRequired,\n//   poster_path: PropTypes.string,\n//   title: PropTypes.string.isRequired,\n// };\n\nexport default MovieItem;","import React from 'react';\n\n// import PropTypes from 'prop-types';\nimport MovieItem from '../moviesItem/moviesItem';\nimport { HomeList } from 'pages/home/home.styled';\n\nconst MovieList = ({ movies }) => {\n  return (\n    <HomeList>\n      {movies.map(({ id, title, poster_path }) => (\n        <MovieItem key={id} id={id} title={title} poster_path={poster_path} />\n      ))}\n    </HomeList>\n  );\n};\n\nexport default MovieList;\n\n// MovieList.propTypes = {\n//   movies: PropTypes.arrayOf(\n//     PropTypes.shape({\n//       id: PropTypes.number.isRequired,\n//       title: PropTypes.string.isRequired,\n//       poster_path: PropTypes.string,\n//     })\n//   ).isRequired,\n// };","import styled from \"@emotion/styled\";\nimport { NavLink } from \"react-router-dom\";\nexport const ContainerHome = styled.div`\n  padding:35px;\n  padding-top:0;`\n\nexport const HomeList = styled.ul`\ndisplay:flex;\n  flex-direction:row;\n  flex-wrap: wrap;\n  gap: 25px;\n`;\nexport const FilmTitle = styled.h4`\nwidth: 245px;\n\n`\nexport const NavWrap = styled.nav`\n  display: flex;\n  gap: 20px;\n  padding: 10px;\n`;\nexport const DirectLink = styled(NavLink)`\n  padding: 8px 16px;\n  border-radius: 25px;\n  text-decoration: none;\n  color: black;\n  font-weight: 700;\n\n  &.active {\n    color: white;\n    background-color: #155d5fd9;\n  }\n`;","import styled from \"@emotion/styled\";\n\nexport const FilmForm = styled.form`\nmargin-bottom: 75px;\n`;\n\nexport const Input = styled.input`\nborder: 2px solid #9E9E9E;\nwidth: 350px;\nheight: 40px;\nborder-radius: 24px;\noutline: none;\nfont-size: 16px;\npadding:10px;\n&::placeholder {\n  color: #9E9E9E;\n}\n`;\nexport const InputButton = styled.button`\nmargin-left: 10px;\nbackground-color: #2e818c;\n border: none;\n border-radius: 24px;\n color: black;\n width: 115px;\n height: 40px;\n font-size: 18px;\n cursor: pointer;\n font-weight: 400;\n`;","import { useState } from \"react\";\nimport { Input, InputButton, FilmForm } from \"./searchForm.styled\";\n\n\nconst SearchForm = ({ onSubmit, query }) => {\n  const [value, setValue] = useState(query);\n\n  const handleInputChange = e => {\n    setValue(e.target.value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    onSubmit(value);\n    setValue('');\n  };\n\n  return (\n    <FilmForm onSubmit={handleSubmit}>\n      <Input\n        type=\"text\"\n        autoComplete=\"off\"\n        autoFocus\n        placeholder=\"Search movies\"\n        value={value}\n        onChange={handleInputChange}\n      />\n      <InputButton type=\"submit\">\n        Search\n      </InputButton>\n    </FilmForm>\n  );\n};\n\nexport default SearchForm;","import React, { useEffect, useState } from 'react';\nimport SearchForm from '../../components/searchForm/searchForm';\nimport Container from '../../components/container/container';\nimport MovieList from '../../components/moviesMenu/moviesList/moviesList';\nimport { useSearchParams } from 'react-router-dom';\nimport { fetchFilmsByName } from '../../apiMovie/ApiMovie';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [query, setQuery] = useState(searchParams.get('query') ?? '');\n\n  useEffect(() => {\n    if (query) {\n      try {\n        fetchFilmsByName(query).then(data => {\n          if (data.results.length === 0) {\n            setSearchParams('');\n          }\n          setMovies(data.results);\n        });\n      } catch (error) {\n        console.log(error);\n      }\n    }\n  }, [query, setSearchParams]);\n\n  const handleSubmit = query => {\n    setQuery(query);\n    setSearchParams(query !== '' ? { query } : {});\n  };\n\n  return (\n    <main>\n      <Container>\n        <SearchForm onSubmit={handleSubmit} query={query} />\n        {movies.length > 0 && <MovieList movies={movies} />}\n      </Container>\n    </main>\n  );\n};\n\nexport default Movies;\n"],"names":["API_KEY","axios","fetchTrendingFilms","response","data","fetchFilmsByName","query","fetchFilmsById","id","fetchCast","fetchReviews","children","title","poster_path","location","useLocation","to","state","from","src","alt","width","height","movies","map","ContainerHome","styled","HomeList","FilmTitle","NavWrap","DirectLink","NavLink","FilmForm","Input","InputButton","onSubmit","useState","value","setValue","e","preventDefault","type","autoComplete","autoFocus","placeholder","onChange","target","setMovies","useSearchParams","searchParams","setSearchParams","get","setQuery","useEffect","then","results","length","error","console","log"],"sourceRoot":""}