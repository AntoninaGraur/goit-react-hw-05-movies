{"version":3,"file":"static/js/46.dcbdffbf.chunk.js","mappings":"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","sources":["apiMovie/ApiMovie.jsx","components/container/container.jsx","pages/home/home.styled.js","pages/movies/moviesDetails.jsx","pages/movies/moviesDetails.styled.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = 'c6d20ac7fe7f3a55ab35208eb3f1e312';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport const fetchTrendingFilms = async () => {\n  const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n  return response.data;\n};\n\nexport const fetchFilmsByName= async query => {\n  const response = await axios.get(\n    `search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n  );\n  return response.data;\n};\n\nexport const fetchFilmsById = async id => {\n  const response = await axios.get(\n    `movie/${id}?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const fetchCast = async id => {\n  const response = await axios.get(\n    `movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const fetchReviews = async id => {\n  const response = await axios.get(\n    `movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return response.data;\n};","import React from 'react';\n// import PropTypes from 'prop-types';\nimport { ContainerHome } from 'pages/home/home.styled';\n\nconst Container = ({ children }) => {\n  return <ContainerHome>{children}</ContainerHome>;\n};\n\n// Container.propTypes = {\n//   children: PropTypes.oneOfType([\n//     PropTypes.arrayOf(PropTypes.node),\n//     PropTypes.node,\n//   ]).isRequired,\n// };\n\nexport default Container;","import styled from \"@emotion/styled\";\nimport { NavLink } from \"react-router-dom\";\nexport const ContainerHome = styled.div`\n  padding:35px;\n  padding-top:0;`\n\nexport const HomeList = styled.ul`\ndisplay:flex;\n  flex-direction:row;\n  flex-wrap: wrap;\n  gap: 25px;\n`;\nexport const FilmTitle = styled.h4`\nwidth: 245px;\n\n`\nexport const NavWrap = styled.nav`\n  display: flex;\n  gap: 20px;\n  padding: 10px;\n`;\nexport const DirectLink = styled(NavLink)`\n  padding: 8px 16px;\n  border-radius: 25px;\n  text-decoration: none;\n  color: black;\n  font-weight: 700;\n\n  &.active {\n    color: white;\n    background-color: #155d5fd9;\n  }\n`;","import React, { Suspense, useEffect } from 'react';\nimport { Outlet, useLocation, useParams, NavLink } from 'react-router-dom';\nimport Container from '../../components/container/container';\nimport { useState } from 'react';\nimport { fetchFilmsById } from '../../apiMovie/ApiMovie';\n// import { Icon } from './movies.styled';\nimport { DetailsDiv,TextContainer, AddIndorm,GoBckkBtn} from './moviesDetails.styled';\n\nconst MovieDetails = () => {\n  const [movie, setMovie] = useState({});\n\n  const { id } = useParams();\n\n  const location = useLocation();\n  const backLocation = location.state?.from ?? '/';\n\n  // console.log(location);\n  // console.log(backLocation);\n\n  useEffect(() => {\n    try {\n      fetchFilmsById(id).then(data => {\n        setMovie(data);\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  }, [id]);\n\n  const { poster_path, title, vote_average, overview, genres } = movie;\n\n  return (\n    <main>\n      <Container>\n        <NavLink to={backLocation}>\n         <GoBckkBtn type='button'>Go Back</GoBckkBtn>\n        </NavLink>\n        <DetailsDiv>\n          <img\n            width=\"300\"\n            src={`https://image.tmdb.org/t/p/w300${poster_path}`}\n            alt={title}\n          />\n          <TextContainer>\n            <h2>{title ? title : 'No Information'}</h2>\n            <p>\n              <span>User Score: </span>\n              {vote_average ? Math.round(vote_average * 10) : 0}%\n            </p>\n            <p>\n              <span>Overview: </span>\n              {overview ? overview : 'No Information'}\n            </p>\n            <p>\n              <span>Genres: </span>\n              {genres && genres.length > 0\n                ? genres.map(value => value.name).join(', ')\n                : 'No information'}\n            </p>\n          </TextContainer>\n        </DetailsDiv>\n        <AddIndorm>\n          <h3>Additional information</h3>\n          <ul>\n            <li>\n              <NavLink to=\"cast\" state={{ from: backLocation }}>\n                Cast\n              </NavLink>\n            </li>\n            <li>\n              <NavLink to=\"reviews\" state={{ from: backLocation }}>\n                Reviews\n              </NavLink>\n            </li>\n          </ul>\n        </AddIndorm>\n        <Suspense fallback={<div>Loading...</div>}>\n          <Outlet />\n        </Suspense>\n      </Container>\n    </main>\n  );\n};\n\nexport default MovieDetails;\n","import styled from '@emotion/styled';\n\nexport const DetailsDiv = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin: 0 auto;\n  padding: 50px;\n`;\nexport const TextContainer = styled.div`\n  font-size: 20px;\n  font-weight: 400;\n`;\nexport const AddIndorm = styled.div`\n  padding: 50px;\n`;\n\nexport const CastList = styled.ul`\n  display: flex;\n  flex-direction: row;\n  gap: 20px;\n  flex-wrap: wrap;\n  justify-content: center;\n`;\n\nexport const CastItem = styled.li`\n  flex-direction: row;\n  gap: 20px;\n  flex-wrap: wrap;\n`;\n\nexport const CastName = styled.div`\n  width: 120px;\n`;\nexport const ReviewsList = styled.div`\n  padding: 50px;\n`;\nexport const GoBckkBtn = styled.button`\n  width: 115px;\n  height: 40px;\n  border-radius: 25px;\n  color: #6b18e1;\n  background-color: #e6df16ab;\n  margin-top: 25px;\n  margin-bottom: 35px;\n  margin-left: 35px;\n  font-size: 18px;\n  font-weight: 600;\n  cursor: pointer;\n  border: none;\n  outline: none;\n  box-shadow: rgba(50, 50, 93, 0.25) 0px 50px 100px -20px,\n    rgba(0, 0, 0, 0.3) 0px 30px 60px -30px,\n    rgba(10, 37, 64, 0.35) 0px -2px 6px 0px inset,\n    rgba(50, 50, 93, 0.25) 0px 50px 100px -20px,\n    rgba(0, 0, 0, 0.3) 0px 30px 60px -30px;\n  transition: all 500ms ease-out;\n  &:hover {\n    transform: scale(1.08);\n    text-shadow: 1px 1px 2px whitesmoke;\n  }\n`;\n"],"names":["API_KEY","axios","fetchTrendingFilms","response","data","fetchFilmsByName","query","fetchFilmsById","id","fetchCast","fetchReviews","children","ContainerHome","styled","HomeList","FilmTitle","NavWrap","DirectLink","NavLink","useState","movie","setMovie","useParams","backLocation","useLocation","state","from","useEffect","then","error","console","log","poster_path","title","vote_average","overview","genres","to","type","width","src","alt","Math","round","length","map","value","name","join","Suspense","fallback","DetailsDiv","TextContainer","AddIndorm","CastList","CastName","ReviewsList","GoBckkBtn"],"sourceRoot":""}